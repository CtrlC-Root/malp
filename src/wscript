#!/usr/bin/env python

def configure(ctx):
    """Configure the project."""

    ctx.env.append_value("CFLAGS", ["-Os", "-mmcu=" + str(ctx.env.MCU), "-DF_CPU=" + str(ctx.env.MCU_HZ)])
    ctx.env.append_value("LFLAGS", ["-mmcu=" + str(ctx.env.MCU)])

def build(ctx):
    """Build the project."""

    # compile
    ctx(rule="${CC} -c -o ${TGT} ${CFLAGS} ${SRC}", target="motion.o", source="motion.c")
    ctx(rule="${CC} -c -o ${TGT} ${CFLAGS} ${SRC}", target="queue.o", source="queue.c")
    ctx(rule="${CC} -c -o ${TGT} ${CFLAGS} ${SRC}", target="remote.o", source="remote.c")
    ctx(rule="${CC} -c -o ${TGT} ${CFLAGS} ${SRC}", target="main.o", source="main.c")

    # link
    ctx(rule="${CC} -o ${TGT} ${LFLAGS} ${SRC}", target="malp", source=["motion.o", "queue.o", "remote.o", "main.o"])

    # prepare
    ctx(rule="${OBJCOPY} -O ihex -R .eeprom ${SRC} ${TGT}", source="malp", target="malp.hex")
    ctx(rule="${OBJCOPY} -j .eeprom --set-section-flags=.eeprom=\"alloc,load\" -O ihex ${SRC} ${TGT}", source="malp", target="malp.eep")
